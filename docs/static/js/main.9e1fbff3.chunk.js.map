{"version":3,"sources":["components/AddCategory.js","components/GifGirdItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGirdItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categori","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoBhD,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,QCPnBG,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGrC,OADAC,QAAQC,IAAIJ,EAAIC,EAAMC,GAElB,sBAAKG,UAAU,OAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAMN,IACrB,kCAAKA,EAAL,W,uBCRCO,EAAO,uCAAE,WAAQC,GAAR,uBAAAC,EAAA,6DAIZR,EAJY,iDAIqCS,UAAUF,GAJ/C,+DAKCG,MAAOV,GALR,cAKZW,EALY,gBAMGA,EAAKC,OANR,uBAMXC,EANW,EAMXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAZxB,kBAgBXc,GAhBW,4CAAF,sDCMPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WAENjB,EAASC,GACJiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAAEb,IAGEc,EDfyBK,CAAcnB,GAAjCU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAGrB,OACI,qCACI,mCAAOb,KAELa,GAAW,mBAAGjB,UAAU,kCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGYc,EAAOF,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADCA,EAAIlB,aEjB7B6B,EAAe,WAAM,MAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWb,KAAI,SAAAc,GAAQ,OACnB,cAAC,EAAD,CAEItB,SAAasB,GADLA,YClBpCC,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.9e1fbff3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n\r\n        setInputValue( e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2){\r\n            //console.log('Submit hecho');\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGirdItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id, title,url);\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={ title}></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs =async ( category ) => {\r\n\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=LKJok4Jo2JWVtLhzIalZ5HC4gVvhW2wZ`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {GifGirdItem} from '../components/GifGirdItem';\r\nimport { getGifs} from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> { category}</h3>\r\n\r\n            { loading && <p className=\"animate_animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( ( img ) => (\r\n                            <GifGirdItem \r\n                                key= {img.id}\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n        \r\n    }, [ category ]);\r\n        \r\n\r\n    return state;\r\n}","import React, {useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    const handleAdd = () => {\r\n        setCategories( [...categories, 'HunterXHunter']);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }></AddCategory>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(categori =>(\r\n                        <GifGrid \r\n                            key = { categori }\r\n                            category = { categori } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}